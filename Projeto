<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Projeto Banco</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #000000;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            width: 350px;
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        input, button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            font-size: 16px;
        }
        .output {
            background-color: #e0f7fa;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
        }
        .output p {
            margin: 5px 0;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Banco Do POO</h1>
        
        <!-- Formulário para cadastro de conta -->
        <div id="cadastro">
            <h2>Cadastrar Conta</h2>
            <label for="nome">Nome do titular:</label>
            <input type="text" id="nome" placeholder="Nome completo" required>
            <label for="senha">Senha (4 dígitos):</label>
            <input type="password" id="senha" maxlength="4" placeholder="Senha de 4 dígitos" required>
            <button onclick="criarConta()">Criar Conta</button>
        </div>

        <!-- Formulário para transações -->
        <div id="operacoes" style="display: none;">
            <h2>Operações</h2>
            <label for="senhaTransacao">Senha para operação:</label>
            <input type="password" id="senhaTransacao" maxlength="4" placeholder="Senha de 4 dígitos">
            <button onclick="verificarSenha()">Confirmar Senha</button>

            <div id="menuOperacoes" style="display: none;">
                <button onclick="exibirExtrato()">Extrato</button>
                <button onclick="depositar()">Depositar</button>
                <button onclick="sacar()">Sacar</button>
                <button onclick="aplicar()">Aplicar</button>
                <button onclick="resgatar()">Resgatar</button>
                <button onclick="sair()">Sair</button>
            </div>
            
            <div id="resultadoOperacao" class="output" style="display: none;"></div>
        </div>
    </div>

    <script>
        class ContaCorrente {
            constructor(nome, senha) {
                this.nome = nome;
                this.numeroConta = this.gerarNumeroConta();
                this.senha = senha;
                this.saldoCorrente = 0;
            }

            gerarNumeroConta() {
                return Math.floor(Math.random() * 900 + 100);  // Gera um número de conta aleatório entre 100 e 999
            }

            setSenha(senha) {
                this.senha = senha;
            }

            getSenha() {
                return this.senha;
            }

            setSaldoCorrente(valor) {
                this.saldoCorrente = valor;
            }

            getSaldoCorrente() {
                return this.saldoCorrente;
            }

            sacar(valor) {
                if (valor <= this.saldoCorrente) {
                    this.saldoCorrente -= valor;
                    return true;
                }
                return false;
            }

            depositar(valor) {
                this.saldoCorrente += valor;
            }

            aplicar(valor) {
                if (valor <= this.saldoCorrente) {
                    this.saldoCorrente -= valor;
                    return valor;
                }
                return 0;
            }
        }

        class ContaPoupanca extends ContaCorrente {
            constructor(nome, senha) {
                super(nome, senha);
                this.saldoPoupanca = 0;
            }

            setSaldoPoupanca(valor) {
                this.saldoPoupanca = valor;
            }

            getSaldoPoupanca() {
                return this.saldoPoupanca;
            }

            resgatar(valor) {
                if (valor <= this.saldoPoupanca) {
                    this.saldoPoupanca -= valor;
                    return valor;
                }
                return 0;
            }

            extrato() {
                return `Saldo Conta Corrente: R$ ${this.getSaldoCorrente().toFixed(2)}\nSaldo Conta Poupança: R$ ${this.getSaldoPoupanca().toFixed(2)}`;
            }
        }

        let contaCorrente = null;
        let contaPoupanca = null;
        let tentativasSenha = 0;

        function criarConta() {
            const nome = document.getElementById("nome").value;
            const senha = document.getElementById("senha").value;

            if (nome && senha.length === 4) {
                contaCorrente = new ContaCorrente(nome, senha);

                const valorDeposito = parseFloat(prompt("Realize seu primeiro depósito de no mínimo R$ 10,00!"));

                if (valorDeposito >= 10) {
                    contaCorrente.depositar(valorDeposito);
                    contaPoupanca = new ContaPoupanca(nome, senha);
                    contaPoupanca.setSaldoCorrente(contaCorrente.getSaldoCorrente());
                    document.getElementById("cadastro").style.display = 'none';
                    document.getElementById("operacoes").style.display = 'block';
                    alert(`Conta Criada! Número da conta: ${contaCorrente.numeroConta}`);
                } else {
                    alert("Depósito mínimo não realizado.");
                }
            } else {
                alert("Por favor, insira um nome e uma senha de 4 dígitos.");
            }
        }

        function verificarSenha() {
            const senhaInformada = document.getElementById("senhaTransacao").value;
            if (senhaInformada === contaCorrente.getSenha()) {
                tentativasSenha = 0;
                document.getElementById("menuOperacoes").style.display = 'block';
                document.getElementById("senhaTransacao").value = '';
            } else {
                tentativasSenha++;
                if (tentativasSenha === 3) {
                    alert("Você excedeu o número de tentativas. A conta foi bloqueada.");
                    window.close();
                } else {
                    alert("Senha incorreta. Tentativas restantes: " + (3 - tentativasSenha));
                }
            }
        }

        function exibirExtrato() {
            const extrato = contaPoupanca.extrato();
            document.getElementById("resultadoOperacao").innerText = extrato;
            document.getElementById("resultadoOperacao").style.display = 'block';
        }

        function depositar() {
            const valor = parseFloat(prompt("Digite o valor do depósito:"));
            if (valor > 0) {
                contaCorrente.depositar(valor);
                alert("Depósito efetuado com sucesso!");
            } else {
                alert("Valor inválido!");
            }
        }

        function sacar() {
            const valor = parseFloat(prompt("Digite o valor do saque:"));
            if (valor > 0 && contaCorrente.sacar(valor)) {
                alert("Saque efetuado com sucesso!");
            } else {
                alert("Saldo insuficiente ou valor inválido!");
            }
        }

        function aplicar() {
            const valor = parseFloat(prompt("Digite o valor para aplicar na conta poupança:"));
            const valorAplicado = contaCorrente.aplicar(valor);
            if (valorAplicado > 0) {
                contaPoupanca.setSaldoPoupanca(contaPoupanca.getSaldoPoupanca() + valorAplicado);
                alert("Valor aplicado na conta poupança com sucesso!");
            } else {
                alert("Valor inválido ou saldo insuficiente!");
            }
        }

        function resgatar() {
            const valor = parseFloat(prompt("Digite o valor para resgatar da conta poupança:"));
            const valorResgatado = contaPoupanca.resgatar(valor);
            if (valorResgatado > 0) {
                contaCorrente.setSaldoCorrente(contaCorrente.getSaldoCorrente() + valorResgatado);
                alert("Valor resgatado para a conta corrente com sucesso!");
            } else {
                alert("Valor inválido ou saldo insuficiente!");
            }
        }

        function sair() {
            alert("Sessão encerrada.");
            window.close();
        }
    </script>
</body>
</html>
